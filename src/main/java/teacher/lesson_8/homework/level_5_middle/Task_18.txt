Изучаем Single Responsibility Principle.

Продолжаем работу над кодом из предыдущего задания.

Одна из возможностей упростить класс FraudDetector кроется в снятии с него
ответственности за реализацию каждого правила обнаружения мошенничества.
Каждое правило - это по сути отдельная программа, которая может быть выполнена
в независимости от всех остальных правил.

Следуя Single Responsibility Principle предлагаем код
каждого правила реализовать в собственном классе!

Тогда у классов правил будет только одна ответственность
(реализация одного правила) и одна причина для того, чтобы
менять код в таких классах (код в классах правил будет меняться
только тогда, когда будут меняться сами правила).

Для этого создайте абстрактный класс FraudRule.

abstract class FraudRule {

    private String ruleName;

    public FraudRule(String ruleName) {
        this.ruleName = ruleName;
    }

    public abstract boolean isFraud(Transaction t);

}